= NEP
#@#担当者:@ 南口
#@# 現時点の文字数は、3989文字です。
この章では、NEPの概要とその出し方、実際のNEPについて解説します。


== NEPの概要
NEPとは、NEO Enhancement Proposalの略称であり、NEOに関わるコミュニティに対して情報を提供したり、NEOやその活用プロセス・環境の新しい特徴について言及するためにデザイン（設計）されたドキュメントのことを表します。
NEPでは、その特徴が簡潔で技術的に明記されること、およびその根拠が示されることが求められます。
NEPの著者には、そのコミュニティ内で同意を形成し、反対意見についてもドキュメント化する責任があります。


== NEPの理念
NEPは、NEOの新しい特徴を書き起こし、NEOコミュニティのインプットを集めイシュー（議題）化したり、NEOに実装された既存のデザインをドキュメント化するために重要なメカニズムとなるように意図されています。
そのため、NEPは、NEOを実装する者にとって、その進捗を確認できる便利な方法になっています。
理想は、実装の進捗を改善したユーザーが、自分の完了させたNEPをリスト化することです。
これが実現すれば、エンドユーザーは所与の実装やライブラリーの現状を簡単に理解することができるようになります。


== NEPのタイプ
NEPには3つの型（タイプ）があります。

=== スタンダードトラック型NEP
スタンダードトラック（Standards Track）型NEPは、NEOの実装環境の大部分または全部に影響を与える何かしらの変更について言及しています。
たとえば、ネットワークプロトコルに対する変更、ブロックやトランザクションの評価ルールにおける変更、アプリケーションの標準（standards）/系統（conventions）の提案、その他のNEOを用いたアプリケーションの相互利便性に影響を与えるあらゆる変更内容や追加機能についてです。

=== インフォーメーション型NEP
インフォーメーション（Information）型NEPは、新しい特徴を提案しませんが、NEOのデザインに関するイシューを書き起こしたり、NEOのコミュニティに対して一般的なガイドラインや情報を提供しています。また、インフォーメーション型NEPでは、必ずしもNEOのコミュニティに対してコンセンサス（同意）やレコメンデーション（推奨）は表明されなくてもよいので、ユーザーと実装者にはインフォーメーション型NEPとそのアドバイスに従う義務はありません。
メタ（Meta）型NEPは、NEOを取り巻くプロセスについて書き起こしたり、その変化やイベントについて提案しています。

=== メタ型NEP
メタ型NEPは、スタンダードトラック型NEPとは違い、NEOのプロトコル自体を超える領域に対応しています。
また、メタ型NEPは実装を提案することもありますが、NEOのコードベースに対してではないので、コミュニティのコンセンサス（同意）がよく求められます。
そのため、メタ型NEPは、インフォーメーション型NEPとは違って、レコメンデーション以上のものであり、ユーザーには基本的にそのアドバイスに従う義務があります。
たとえば、手続きやガイドライン、意思決定プロセスに対する変更、NEOの開発ツールや開発環境に対する変更です。


== NEPの出し方

=== 始まりのアイデア
NEPを出すプロセスは、NEOへの新しいアイデアから始まります。
NEPは、キーとなる提案や新しいアイデアをひとつ含んでいることが強く求められており、注目されるほど成功する傾向にあります。
NEPが必要とされるのは、単一のクライアントに対する変更の場合ではなく、複数のクライアントに影響を及ぼしたり、複数のアプリケーションで利用される標準を定義する変更の場合です。
NEPの編集者は、あまりにも焦点を絞り切れておらず、範囲が広いと思われるNEPの提案を拒否する権利をもっています。
もしNEPの提案内容が疑わしいならば、いくつかの焦点の絞られたNEPに分けることが好ましいです。

=== 編集者の必要
各ネップは、編集者（チャンピョン）を持たなければなりません。
編集者とは、次にあげたスタイル（形式）とフォーマット（書式）を用いてNEPについて書き起こし、公開されている適切な議論を追って、そのアイデアに関わるコンセンサスを形成しようとする人のことを言います。

=== アイデアの公開
リスクをとって事前にアイデアを公開することは、NEPを書いている限り執筆のために潜在的に必要な時間をセーブすることになります。
アイデアが独創的なものである場合に、はじめにNEOコミュニティに確認することで、それまでに公開された議論にのっとってアイデアが拒否された場合などに大量の労力や時間を割くことを防げます。
（インターネットで調べるだけでは十分ではありません。）
また、そうすることは、著者だけでなくコミュニティ全体にとっても、そのアイデアが有用かを明らかにすることに役立ちます。
著者にとって、そのアイデアが有用であるように思えるだけでは、それがNEOの利用されている大部分の地域と多くの人々にとって有用であるとは限りません。

=== プルリクエスト
いったん、編集者がNEOコミュニティに対して、自身のアイデアが承認されるか否かを確認できれば、草稿状態のNEPは、プルリクエストとして提出されなければなりません。
これをすることによって、NEPの著者は適切な形式（フォーマット）と質（クオリティ）で、草稿状態のNEPを断続的に編集でき、追加で外部から寄せられるコメントと著者によりアイデアに対する関心や反応に対処することができます。

=== ラベルとステータス
もしNEPの協力者（コラボレーター）が承認すれば、NEPの著者はそのNEPに番号をつけ、スタンダードトラック型・インフォーメーション型・メタ型のどれかにラベルし、「Draft（草稿状態）」とステータスを決め、ギットのレポジトリに追加します。

=== スタンダードトラック型NEPの出し方
スタンダードトラック型NEPをだすプロセスは、デザインドキュメント・実装（インプリメンテーション）・最終的な公式仕様へのアップデートという、３つのパートから構成されます。
NEPは、実装されることによってNEPを学習することが助けられる場合をのぞいて、実装パートの前にレビューと承認を受けなければなりません。
また、スタンダードトラック型NEPでは、最終の公式仕様へのアップデートの前に、コードやパッチ、URLなどの形式で、実装パートを含んでいなければなりません。

=== 承認の条件
NEPが承認されるためには、最低でも次の基準が満たされなければなりません。

  * NEPで提案されるアイデアが明確で完璧に説明されていること。
  * そのアイデアで提案されている案において、ネットの向上（？）が代表されていること。
  * そのアイデアで提案される実装において、適用可能であれば、堅実でプロトコルを複雑化しすぎないようになっていること。

=== 承認とステータス
NEPの承認の可否によりステータスに想定されうる変化と状態を@<img>{nep_status}に示します。

//image[nep_status][NEPのステータスの分岐][scale=0.8]{

//}

主要なステータスについて説明していきます。
NEPが承認されると、その実装も完了される必要があります。
そして実装が完了され、それがコミュニティに受け入れられると、NEPのステータスは「Final（最終状態）」に変えられます。
また、NEPには「Draft」と「Final」以外にも「Deferred（繰越状態）」というステータスをつけることができます。
このステータスは、該当するNEPに一切の進捗が生まれていない場合につけられます。
NEPのステータスがいったん「Deferred」になっても、NEPの編集者はステータスを「Draft」に戻すことができます。
また、NEPは「Rejected（拒否された状態）」というステータスにもなります。
その場合、あらゆることに対する言及などが行われたとしても、いいアイデアではなかったということになります。
しかし、NEPが拒否されても、この事実の記録が残ることには意味があります。
インフォーメーション型NEPとメタ型NEPは、そのNEPが決して完了することがない場合に「Active（アクティブな状態）」というステータスをもつことがあります。
また、NEPは異なるNEPや古いNEPから置き換えることもできます。

=== NEPを出すフォーマットとテンプレート
#@# 今後に追加予定
//emlist[キャプション１]{ NEP: <NEP number>(this is determined by the NEP editor)
  Title: <NEP title>
  Author: <list of authors' real names and optionally, email address>
 *Discussions-To: <email address>
  Status: <Draft | Active | Accepted | Deferred | Rejected | Withdrawn | Final | Superseded>
  Type: <Standard | Informational | Meta>
  Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>
 *Replaces: <NEP numbers>
 *Superseded-By: <NEP number>
 *Resolution: <url>
//}

@<br>{}

//emlist[キャプション２]{  Random J. User <address@dom.ain>
//}

@<br>{}

//emlist[キャプション３]{  Random J. User
//}


== 実際のNEPに関する解説
#@# NEP1~NEP11やNeoID/NeoFS/NeoX/NeoQSなどの説明が考えられます。
実際のNEPのうちで代表的なものの例を次の表に示します。

//table[identifier][実際のNEPの例]{
番号      タイトル                                 タイプ             ステータス
------------------------------------------------------------------------------------------
1         NEP Purpose and Guidelines             Meta              Active
2         Passphrase-protected private key       Standard          Final
3         NeoContract ABI                        Standard          Final
4         Dynamic Contract Invocation            Standard          Replaced
5         Token Standard                         Standard          Final
6         Wallet Standard                        Standard          Final
7         Triggers for NeoContrac                Standard          Final
8         Stack Isolation for NeoVM              Standard          Final
9         URI Scheme                             Standard          Final
10        Composite Smart Contracts              Standard          Final
11        Non-fungible Token Standard            Standard          Accepted
          NeoID                                  Standard          Stub
          NeoFS                                  Standard          Stub
          NeoX                                   Standard          Stub
          NeoQS                                  Standard          Stub
//}

@<br>{}

この中でも、代表的なNEPともいえるNEP5やNEP6について説明します。
また今後追加される可能性の高いNEPであるNEOXについても説明していきます。

=== NEP5
#@# 今後に追加予定


=== NEP6
#@# 今後に追加予定


=== NeoX
#@# 初心者にもわかりやすいように、NeoXの説明に例や図をたす予定です。
NeoXとは、クロスチェーン型の相互運用性を実装するプロトコルです。
NeoXは2つのパートに分けられます。
ひとつ目は「クロスチェーン資産交換型プロトコル（cross-chain assets exchange protocol）」で、ふたつ目は「クロスチェーン分配取引型プロトコル（cross-chain distributed transaction protocol）」です。

==== クロスチェーン資産交換型プロトコル
NeoXは、二本鎖で不可分な資産を交換するプロトコルにまで拡張されました。
それは、複数のプラットフォーム参加者が異なるチェーン間で資産を交換できるようにし、トランザアクションのプロセス全体のあらゆるステップがともに成功/失敗することを確保するためです。

==== クロスチェーン分配取引型プロトコル
クロスチェーン分配取引とは、トランザクションの複数のステップが異なるブロックチェーンを渡って散らばることと、トランザクション全体の一貫性が確保されることを意味しています。
これは、クロスチェーンの資産交換を拡張したものであり、資産交換という行いを任意なものへと拡張しました。
NeoXは、それがうまくいこうが全体として元に戻ろうが、クロスチェーン型のスマートコントラクトにおいて、スマートコントラクトが複数のチェーン上の異なるパートとして機能することを可能にするといわれています。
これによって、クロスチェーンが協調することの可能性が広がります。
