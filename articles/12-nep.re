= NEP
#@#担当者:@南口
この章では、NEPの概要とその出し方、実際のNEPについて解説します。

== NEPの概要
#@# 暫定の内容で箇条書きで進めています。
==== NEPとは、NEO Enhancement Proposalの略称であり、NEOに関わるコミュニティに対して情報を提供したり、NEOやその活用プロセス・環境について新しく見つかった特徴を書き記すためにデザイン（設計）されたドキュメントのことを表します。各NEPでは、その特徴が簡潔な形で技術的に明記されることと、その根拠が示されることが求められます。各NEPの著者には、そのコミュニティ内で同意を形成し、反対意見についてもドキュメント化する責任があります。
==== NEPは、NEOの新しい特徴を書き記したり、NEOコミュニティのインプットを集めてイシュー（議題）化したり、NEOに実装された既存のデザイン（設計）をドキュメント化するために、重要なメカニズムとなることを意図されています。
==== NEPは、NEOの実装者にとって、自分の実装の進捗を確認できる便利な方法です。理想は、実装の進捗を改善した各ユーザーが、自分の完了させたNEPをリスト化することです。これが実現することで、エンドユーザーは所与の実装やライブラリーの現状を簡単に理解することができるようになります。
==== NEPには、3つの型（タイプ）があります。
==== スタンダードトラック（Standards Track）型NEPは、NEOの実装環境の大部分または全部に影響を与える何かしらの変更について言及しています。たとえば、ネットワークのプロトコルに対する変更、ブロックやトランズアクションの評価ルールにおける変更、アプリケーションの標準（standards）/系統（conventions）の提案、その他のNEOを用いたアプリケーションの相互利便性に影響を与えるあらゆる変更内容や追加機能などについてです。
==== インフォーメーション（Information）型NEPは、新しい特徴を提案するものではありませんが、NEOのデザイン（設計）に関するイシュー（議題）を書き記したり、NEOのコミュニティに対して一般的なガイドラインや情報を提供しています。また、インフォーメーション型NEPでは、必ずしもNEOのコミュニティに対してコンセンサス（同意）やレコメンデーション（推奨）は表明されなくてもよいので、ユーザーと実装者にはインフォーメーション型NEPとそのアドバイスに従う義務はありません。
==== メタ（Meta）型NEPは、NEOを取り巻くプロセスについて書き記したり、プロセスに対する変化やプロセス内のイベントについて提案しています。メタ型NEPは、スタンダードトラック型NEPと似ていますが、（スタンダードトラック型NEPとは違い）NEOのプロトコル自体を超える領域に対応しています。また、メタ型NEPは実装を提案することもありますが、NEOのコードベースに対してではないので、コミュニティのコンセンサス（同意）がよく求められます。そのため、メタ型NEPは、インフォーメーション（Informational）型NEPとは違って、レコメンデーション（推奨）以上のものであり、ユーザーには基本的にメタ型NEPとそのアドバイスに従う義務があります。たとえば、手続きやガイドライン、意思決定プロセスに対する変更、NEOの開発ツールや開発環境に対する変更などです。
==== NEPのプロセスは、NEOへの新しいアイデアから始まります。各NEPは、キーとなる提案や新しいアイデアを一つ含んでいることが強く求められています。NEPは、注目されればされるほど、成功する傾向にあります。NEPが必要とされるのは、単一のクライアントに対する単一の変更の場合ではなく、複数のクライアントに影響を及ぼしたり、複数のアプリケーションで利用される標準を定義する変更の場合です。NEPの編集者は、あまりにも焦点を絞り切れておらず、範囲が広いと思われるNEPの提案を拒否する権利をもっています。もし、NEPの提案内容が疑わしいなら、いくつかの焦点の絞られたNEPに分けることが好ましいです。
@<br>{}

== NEPの出し方
#@# 今後に追加予定
今後に追加予定です
@<br>{}

== 実際のNEPに関する解説
#@# 今後に追加予定
実際のNEPの例として、次のものがあげられます。
#@# 詳細はあとで追加します
NEP5やNEP6などなど。
#@# 詳細をあとで追加します。
NeoID/NeoFS/NeoX/NeoQSも追加される予定です。
NeoXとは、クロスチェーン型の相互利便性を実装するプロトコルです。NeoXは2つに分類されます。一つ目は「クロスチェーン資産交換型プロトコル」で、二つ目は「クロスチェーン分配取引型プロトコル」です。

@<br>{}
